[env]
CONTAINER_PUSH_URL = "ghcr.io/djkato"
ALL_APPS = [
  "abandoned-checkouts",
  "payment-stripe",
  "payment-klarna",
  "payment-authorize.net",
  "avatax",
  "cms-v2",
  "crm",
  "data-importer",
  "emails-and-messages",
  "invoices",
  "klaviyo",
  "products-feed",
  "search",
  "segment",
  "slack",
  "smtp",
  "taxjar",
]

[tasks.default]
alias = "build"

# Overrides the default build task
[tasks.build]
alias = "build-all"

[tasks.build-all]
dependencies = [
  "delete-images",
  "build-abandoned-checkouts",
  "build-payment-stripe",
  "build-payment-klarna",
  "build-payment-authorize.net",
  "build-avatax",
  "build-cms-v2",
  "build-crm",
  "build-data-importer",
  "build-emails-and-messages",
  "build-invoices",
  "build-klaviyo",
  "build-products-feed",
  "build-search",
  "build-segment",
  "build-slack",
  "build-smtp",
  "build-taxjar",

]

[tasks.apply-changes]
script = '''
./changes.sh
'''

[tasks.push]
script = '''
for i in ${ALL_APPS[*]}; do
  docker push ${CONTAINER_PUSH_URL}/saleor-sitemap-generator:latest
done
'''

[tasks.delete-images]
script = '''
for i in ${ALL_APPS[*]}; do
  docker rmi -f $(docker image ls -q --filter=label=service=saleor-app-$i) 2>&1 || true
done
'''

[tasks.build-avatax]
extend = "build-arg-app"
env = { "APP" = "avatax" }

[tasks.build-cms-v2]
extend = "build-arg-app"
env = { "APP" = "cms-v2" }

[tasks.build-crm]
extend = "build-arg-app"
env = { "APP" = "crm" }

[tasks.build-data-importer]
extend = "build-arg-app"
env = { "APP" = "data-importer" }

[tasks.build-emails-and-messages]
extend = "build-arg-app"
env = { "APP" = "emails-and-messages" }

[tasks.build-invoices]
extend = "build-arg-app"
env = { "APP" = "invoices" }

[tasks.build-klaviyo]
extend = "build-arg-app"
env = { "APP" = "klaviyo" }

[tasks.build-products-feed]
extend = "build-arg-app"
env = { "APP" = "products-feed" }

[tasks.build-search]
extend = "build-arg-app"
env = { "APP" = "search" }

[tasks.build-segment]
extend = "build-arg-app"
env = { "APP" = "segment" }

[tasks.build-slack]
extend = "build-arg-app"
env = { "APP" = "slack" }

[tasks.build-smtp]
extend = "build-arg-app"
env = { "APP" = "smtp" }

[tasks.build-taxjar]
extend = "build-arg-app"
env = { "APP" = "taxjar" }

## DEPRECATED APPS:

[tasks.build-stripe]
extend = "build-arg-old-app"
env = { "APP" = "payment-stripe", "PUBLIC_PATH" = "/app/public" }

[tasks.build-klarna]
extend = "build-arg-old-app"
env = { "APP" = "payment-klarna", "PUBLIC_PATH" = "/app/public" }

[tasks.build-abandoned-checkouts]
extend = "build-arg-old-app"
env = { "APP" = "abandoned-checkouts", "PUBLIC_PATH" = "/app/src/public" }

[tasks.build-authorize-net]
extend = "build-arg-old-app"
env = { "APP" = "payment-authorize.net", "PUBLIC_PATH" = "/app/example/public" }


## GENERALIZED BUILD SCRIPTS

[tasks.build-arg-app]
private = true
script = '''
cd all_apps/apps
docker build . --build-arg SERVICE="saleor-app-${APP}" \
               --build-arg TITLE="djkato/saleor-app-${APP}" \
               --build-arg DESC="Saleor app for ${APP}" \
               --build-arg URL="https://github.com/saleor/saleor-app-${APP}" \
               --build-arg SOUCRE="https://github.com/saleor/saleor-app-${APP}" \
               --build-arg AUTHORS="Saleor <hello@saleor.io>, Djk치콘o <djkatovfx@gmail.com>" \
               -t ${CONTAINER_PUSH_URL}/saleor-app-${APP} \
               .
'''

[tasks.build-arg-old-app]
private = true
script = '''
cd all_apps/saleor-app-${APP}
docker build . --build-arg PUBLIC_PATH="${PUBLIC_PATH}" \
               --build-arg SERVICE="saleor-app-${APP}" \
               --build-arg TITLE="djkato/saleor-app-${APP}" \
               --build-arg DESC="Saleor app for Authorize.net" \
               --build-arg URL="https://github.com/saleor/saleor-app-${APP}" \
               --build-arg SOUCRE="https://github.com/saleor/saleor-app-${APP}" \
               --build-arg AUTHORS="Saleor <hello@saleor.io>, Djk치콘o <djkatovfx@gmail.com>" \
               -t ${CONTAINER_PUSH_URL}/saleor-app-${APP} \
               .
'''
